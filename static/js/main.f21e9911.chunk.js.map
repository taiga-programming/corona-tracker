{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f21e9911.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2hx30\",\"card\":\"Cards_card__35PUj\",\"infected\":\"Cards_infected__8yIsu\",\"recovered\":\"Cards_recovered__Aj539\",\"deaths\":\"Cards_deaths__3r0vS\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\n  \r\nimport styles from './Cards.module.css';\r\n\r\nimport cx from 'classnames';\r\n\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate }}) => {\r\n  console.log(confirmed);\r\n  \r\n  if(!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return(\r\n   <div className={styles.container}>\r\n     <Grid container spacing={3} justify=\"center\">\r\n       <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={confirmed.value}\r\n              duration={2.5}\r\n              separator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          <Typography variant=\"body2\">number of active cases of covid</Typography>\r\n        </CardContent>\r\n       </Grid>\r\n       <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n         <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={deaths.value}\r\n              duration={2.5}\r\n              separator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          <Typography variant=\"body2\">number of active cases of covid</Typography>\r\n        </CardContent>\r\n       </Grid>\r\n       <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n        <CardContent>\r\n          <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n          <Typography variant=\"h5\">\r\n            <CountUp\r\n              start={0}\r\n              end={recovered.value}\r\n              duration={2.5}\r\n              separator=\",\"\r\n            />\r\n          </Typography>\r\n          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n          <Typography variant=\"body2\">number of active cases of covid</Typography>\r\n        </CardContent>\r\n       </Grid>\r\n     </Grid>\r\n   </div>\r\n  )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api'\r\n\r\nexport const fetchData = async ( country ) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, deaths, recovered, lastUpdate };\r\n\r\n  } catch(error){\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async ()=> {\r\n  try {\r\n   const { data } = await axios.get(`${url}/daily`);\r\n\r\n    const modifiedData = data.map(( dailyData ) =>({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n\r\nexport const fetchCountries = async ()=> {\r\n  try {\r\n    const {data: { countries }}= await  axios.get(`${url}/countries`);\r\n    \r\n    return countries.map((country) => country.name);\r\n\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data:{confirmed, recovered, deaths}, country}) => {\r\n  \r\n  const [dailyData, setDailyData] = useState([]);\r\n  \r\n   useEffect(() => {\r\n     const fetchAPI = async () => {\r\n      setDailyData( await fetchDailyData());\r\n     }\r\n\r\n     console.log(dailyData);\r\n\r\n     fetchAPI();\r\n   },[]);\r\n  \r\n\r\n   const lineChart = (\r\n    dailyData.length \r\n\r\n      ? (\r\n        <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => date),\r\n          datasets: [{\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'Infected', \r\n          \r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n              data: dailyData.map(({ deaths }) => deaths),\r\n              label: 'Deaths', \r\n              backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n              borderColor: 'red',\r\n              fill: true,\r\n          }],\r\n        }}\r\n      /> ): null\r\n    );\r\n \r\n  console.log(confirmed, recovered, deaths);\r\n\r\n  const barChart = (\r\n    confirmed\r\n    ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['infected','Recovered','Deaths'],\r\n          datasets: [{\r\n            label: 'people',\r\n            backgroundColor: [\r\n            'rgba(0, 0, 255, 0.5)', \r\n            'rgba(0,  255, 0, 0.5)', \r\n            'rgba(255, 0, 0, 0.5)'\r\n           ],\r\n           data:[confirmed.value, recovered.value, deaths.value]\r\n          }]\r\n        }}\r\n\r\n        options={{\r\n          legend: {display: false },\r\n          title: {display: true, text:`Current state in ${country}`}\r\n        }}\r\n      \r\n      />\r\n\r\n    ) : null \r\n  )\r\n\r\n\r\n\r\n  return(\r\n   <div className={styles.container}>\r\n     {country ? barChart : lineChart }\r\n   </div>   \r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core'\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n   const fetchAPI= async () => {\r\n    setFetchedCountries( await fetchCountries());\r\n  }\r\n     fetchAPI();\r\n  }, [setFetchedCountries]);\r\n    \r\n  console.log(fetchedCountries);\r\n   \r\n  return(\r\n   <FormControl className={styles.formControl}>\r\n     <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value) }>\r\n       <option value=\"\">Global</option>\r\n       {fetchedCountries.map(( country, i ) => <option key={i} value={country}>{country}</option>)}\r\n     </NativeSelect>\r\n   </FormControl>\r\n  )\r\n}\r\n\r\nexport default  CountryPicker ;\r\n","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker} from './components';\r\n\r\nimport styles from './App.module.css';\r\n\r\nimport { fetchData } from './api';\r\n\r\nimport coronaImage from './images/image.png'\r\n\r\n\r\nclass App extends React.Component {\r\n \r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async ( country ) => {\r\n    const fetchedData = await fetchData(country);\r\n    \r\n    this.setState({ data: fetchedData, country: country });\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image}src={coronaImage} alt=\"COVID-19\"/>\r\n        <Cards data={ data }/>\r\n        <Chart data={data} country={country}/>\r\n        <CountryPicker handleCountryChange={this.handleCountryChange}/>  \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3CqVY\",\"image\":\"App_image__3sZDE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__slYwH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__38YJq\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}